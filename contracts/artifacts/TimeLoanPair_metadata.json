{
	"compiler": {
		"version": "0.6.6+commit.6c089d02"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract IUniswapV2Pair",
						"name": "_pair",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrowed",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "creditIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "created",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expire",
						"type": "uint256"
					}
				],
				"name": "Borrowed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrowed",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "creditIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "created",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expire",
						"type": "uint256"
					}
				],
				"name": "Closed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creditor",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "shares",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "credit",
						"type": "uint256"
					}
				],
				"name": "Deposited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrowed",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "creditIn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "created",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expire",
						"type": "uint256"
					}
				],
				"name": "Repaid",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "creditor",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "shares",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "credit",
						"type": "uint256"
					}
				],
				"name": "Withdrew",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BASE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "BUFFER",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DELAY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DOMAIN_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "FEE",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "LTV",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ORACLE",
				"outputs": [
					{
						"internalType": "contract IUniswapOracleRouter",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PERMIT_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "UNI",
				"outputs": [
					{
						"internalType": "contract IUniswapV2Router02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "calculateLiquidityToBurn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "close",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "closeAllOpen",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "size",
						"type": "uint256"
					}
				],
				"name": "closeInBatches",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "deposit",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "depositLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityAdded",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityDeposits",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityFreed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityInUse",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "asset",
						"type": "address"
					}
				],
				"name": "liquidityOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityRemoved",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidityWithdrawals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrow",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "outMin",
						"type": "uint256"
					}
				],
				"name": "loan",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "loans",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "nonces",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pair",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "deadline",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "permit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "positions",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrowed",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "creditIn",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "liquidityInUse",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "created",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expire",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "open",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "processedIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrow",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "quote",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "minOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrow",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "quoteMin",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrow",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "quoteOracle",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "collateral",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "quoteSwap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "repay",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token0",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "token1",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_shares",
						"type": "uint256"
					}
				],
				"name": "withdraw",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"allowance(address,address)": {
					"params": {
						"account": "The address of the account holding the funds",
						"spender": "The address of the account spending the funds"
					},
					"returns": {
						"_0": "The number of tokens approved"
					}
				},
				"approve(address,uint256)": {
					"details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
					"params": {
						"amount": "The number of tokens that are approved (2^256-1 means infinite)",
						"spender": "The address of the account which may transfer tokens"
					},
					"returns": {
						"_0": "Whether or not the approval succeeded"
					}
				},
				"balanceOf(address)": {
					"params": {
						"account": "The address of the account to get the balance of"
					},
					"returns": {
						"_0": "The number of tokens held"
					}
				},
				"calculateLiquidityToBurn(address,uint256)": {
					"params": {
						"amount": "the amount of asset required as output "
					},
					"returns": {
						"_0": "the amount of liquidity to burn"
					}
				},
				"close(uint256)": {
					"params": {
						"id": "the `id` of the given loan to close"
					},
					"returns": {
						"_0": "success/failure"
					}
				},
				"closeInBatches(uint256)": {
					"params": {
						"size": "the maximum size of batch to execute"
					},
					"returns": {
						"_0": "the last index processed"
					}
				},
				"deposit(uint256)": {
					"params": {
						"amount": "the amount of liquidity to add for shares"
					},
					"returns": {
						"_0": "success/failure"
					}
				},
				"liquidityOf(address)": {
					"params": {
						"asset": "the asset to calculate liquidity for"
					},
					"returns": {
						"_0": "the amount of liquidity available"
					}
				},
				"loan(address,address,uint256,uint256)": {
					"params": {
						"amount": "the amount of collateral being provided",
						"borrow": "the asset being borrowed",
						"collateral": "the asset being used as collateral",
						"outMin": "the minimum amount of liquidity to borrow"
					}
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"params": {
						"amount": "The number of tokens that are approved (2^256-1 means infinite)",
						"deadline": "The time at which to expire the signature",
						"owner": "The address to approve from",
						"r": "Half of the ECDSA signature pair",
						"s": "Half of the ECDSA signature pair",
						"spender": "The address to be approved",
						"v": "The recovery byte of the signature"
					}
				},
				"quote(address,address,uint256)": {
					"params": {
						"amount": "the amount of collateral being provided",
						"borrow": "the asset being borrowed",
						"collateral": "the asset being used as collateral"
					},
					"returns": {
						"minOut": "the minimum amount of liquidity to borrow"
					}
				},
				"quoteMin(address,address,uint256)": {
					"params": {
						"amount": "the amount of collateral being provided",
						"borrow": "the asset being borrowed",
						"collateral": "the asset being used as collateral"
					},
					"returns": {
						"amountOut": "the amount of liquidity to borrow"
					}
				},
				"quoteOracle(address,address,uint256)": {
					"params": {
						"amount": "the amount of collateral being provided",
						"borrow": "the asset being borrowed",
						"collateral": "the asset being used as collateral"
					},
					"returns": {
						"amountOut": "the amount of liquidity to borrow"
					}
				},
				"quoteSwap(address,uint256)": {
					"params": {
						"amount": "the amount of collateral being provided",
						"collateral": "the asset being sold"
					},
					"returns": {
						"amountOut": "the output of the trade"
					}
				},
				"repay(uint256)": {
					"params": {
						"id": "the id of the loan to close"
					},
					"returns": {
						"_0": "true/false if loan was successfully closed"
					}
				},
				"transfer(address,uint256)": {
					"params": {
						"amount": "The number of tokens to transfer",
						"dst": "The address of the destination account"
					},
					"returns": {
						"_0": "Whether or not the transfer succeeded"
					}
				},
				"transferFrom(address,address,uint256)": {
					"params": {
						"amount": "The number of tokens to transfer",
						"dst": "The address of the destination account",
						"src": "The address of the source account"
					},
					"returns": {
						"_0": "Whether or not the transfer succeeded"
					}
				},
				"withdraw(uint256)": {
					"params": {
						"_shares": "the amount of shares to burn for liquidity"
					},
					"returns": {
						"_0": "success/failure"
					}
				}
			}
		},
		"userdoc": {
			"methods": {
				"allowance(address,address)": {
					"notice": "Get the number of tokens `spender` is approved to spend on behalf of `account`"
				},
				"approve(address,uint256)": {
					"notice": "Approve `spender` to transfer up to `amount` from `src`"
				},
				"balanceOf(address)": {
					"notice": "Get the number of tokens held by the `account`"
				},
				"calculateLiquidityToBurn(address,uint256)": {
					"notice": "calculates the amount of liquidity to burn to get the amount of asset"
				},
				"close(uint256)": {
					"notice": "close a specific loan based on id"
				},
				"closeAllOpen()": {
					"notice": "iterate through all open loans and close"
				},
				"closeInBatches(uint256)": {
					"notice": "batch close any pending open loans that have expired"
				},
				"constructor": "constructor takes a uniswap pair as an argument to set its 2 borrowable assets",
				"deposit(uint256)": {
					"notice": "deposit `amount` amount of liquidity for user"
				},
				"depositAll()": {
					"notice": "deposit all liquidity from msg.sender"
				},
				"depositLiquidity()": {
					"notice": "deposit available liquidity in the system into the Uniswap Pair, manual for now, require keepers in later iterations"
				},
				"liquidityBalance()": {
					"notice": "the current net liquidity positions"
				},
				"liquidityOf(address)": {
					"notice": "returns the available liquidity (including LP tokens) for a given asset"
				},
				"loan(address,address,uint256,uint256)": {
					"notice": "Returns greater than `outMin` amount of `borrow` based on `amount` of `collateral supplied"
				},
				"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
					"notice": "Triggers an approval from owner to spends"
				},
				"quote(address,address,uint256)": {
					"notice": "Provides a quote of how much output can be expected given the inputs"
				},
				"quoteMin(address,address,uint256)": {
					"notice": "Provides a minimum quote of quoteSwap and quote"
				},
				"quoteOracle(address,address,uint256)": {
					"notice": "Provides a quote of how much output can be expected given the inputs unadjusted for fee"
				},
				"quoteSwap(address,uint256)": {
					"notice": "Provides a quote of how much output can be expected if a trade were to be executed"
				},
				"repay(uint256)": {
					"notice": "Repay a pending loan with `id` anyone can repay, no owner check"
				},
				"transfer(address,uint256)": {
					"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Transfer `amount` tokens from `src` to `dst`"
				},
				"withdraw(uint256)": {
					"notice": "withdraw `_shares` amount of liquidity for user"
				},
				"withdrawAll()": {
					"notice": "withdraw all liquidity from msg.sender shares"
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"localhost/contracts/TimeLoans.sol": "TimeLoanPair"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"localhost/contracts/TimeLoans.sol": {
			"keccak256": "0x638e6207f3d38171bb60957de188abbdf1645e4c9e780b672cca908b6c921786",
			"urls": [
				"bzz-raw://0e4ae48fec063309f8acfccf835c0a441b2b14ee0ceb2e83708276a17d2d7a73",
				"dweb:/ipfs/QmWVWc534s547PjSEB6fYcjXETrGUkiwt88vrMbceG1bCT"
			]
		}
	},
	"version": 1
}